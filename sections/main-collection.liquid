{%- render 'section-spacing-collapsing' -%}

{%- if section.settings.show_filters and collection.filters.size > 0 -%}
  {%- assign show_filters = true -%}
{%- else -%}
  {%- assign show_filters = false -%}
{%- endif -%}

{%- comment -%} Check if this collection should show top filters {%- endcomment -%}
{%- assign show_top_filters = collection.metafields.custom.show_top_filters -%}
{%- assign filter_type = show_top_filters | downcase -%}

<style>
  {%- assign card_blends = false -%}

  {%- unless settings.background != 'rgba(0,0,0,0)' and settings.product_card_background != 'rgba(0,0,0,0)' and settings.background != settings.product_card_background -%}
    {%- assign card_blends = true -%}
  {%- endunless -%}

  #shopify-section-{{ section.id }} {
    --product-list-gap: {% if section.settings.products_per_row_mobile == '2' %}{% if card_blends %}var(--product-list-row-gap){% endif %} var(--spacing-2){% else %}var(--product-list-row-gap) var(--product-list-column-gap){% endif %};
    --product-list-items-per-row: {{ section.settings.products_per_row_mobile | times: 1 }};
    --product-list-grid: auto-flow dense / repeat(var(--product-list-items-per-row), minmax(0, 1fr));
    --product-list-promo-grid-column: span {{ section.settings.products_per_row_mobile }};

    --content-over-media-gap: var(--spacing-8);
    overflow-x: hidden;
  }

  @media screen and (min-width: 700px) {
    #shopify-section-{{ section.id }} {
      --product-list-gap: var(--product-list-row-gap) var(--product-list-column-gap);
      --product-list-items-per-row: 4;
      --product-list-promo-grid-column: span 1;
    }
    
    /* Hide sidebar by default */
    #shopify-section-{{ section.id }} .collection--filters-sidebar {
      grid-template-columns: minmax(0, 1fr);
    }
    
    #shopify-section-{{ section.id }} .collection__facets {
      display: none;
    }
    
    /* Show sidebar when active */
    #shopify-section-{{ section.id }}.sidebar-active .collection--filters-sidebar {
      grid-template-columns: var(--collection-sidebar-width) minmax(0, 1fr);
    }
    
    #shopify-section-{{ section.id }}.sidebar-active .collection__facets {
      display: block;
    }
    
    /* Adjust grid when sidebar is active */
    #shopify-section-{{ section.id }}.sidebar-active {
      --product-list-items-per-row: 3;
    }
  }

  @media screen and (min-width: 1000px) {
    #shopify-section-{{ section.id }} {
      --product-list-items-per-row: 4;
      --product-list-promo-grid-column: span 2;
    }
    
    /* Adjust grid when sidebar is active */
    #shopify-section-{{ section.id }}.sidebar-active {
      --product-list-items-per-row: 3;
    }
  }

  @media screen and (min-width: 1200px) {
    #shopify-section-{{ section.id }} {
      --product-list-items-per-row: 4;
    }
    
    /* Adjust grid when sidebar is active */
    #shopify-section-{{ section.id }}.sidebar-active {
      --product-list-items-per-row: 3;
    }
  }

  @media screen and (min-width: 1400px) {
    #shopify-section-{{ section.id }} {
      --product-list-items-per-row: 4;
    }
    
    /* Adjust grid when sidebar is active */
    #shopify-section-{{ section.id }}.sidebar-active {
      --product-list-items-per-row: 3;
    }

    {%- for block in section.blocks -%}
      #block-{{ section.id }}-{{ block.id }} {
        --product-list-promo-grid-column: span {{ block.settings.column_span }};

        {%- if block.settings.column_span == '2' -%}
          --content-over-media-column-gap: var(--spacing-12);
        {%- endif -%}
      }
    {%- endfor -%}
  }

  {%- comment -%} Collection top bar styling {%- endcomment -%}
  #shopify-section-{{ section.id }} .collection__top-bar {
    display: flex;
    flex-direction: column;
    gap: 20px;
    margin-bottom: 24px;
  }
  
  #shopify-section-{{ section.id }} .collection__search {
    width: 100%;
  }
  
  #shopify-section-{{ section.id }} .search-form {
    width: 100%;
  }
  
  #shopify-section-{{ section.id }} .search-input-wrapper {
    position: relative;
    width: 100%;
  }
  
  #shopify-section-{{ section.id }} .search-icon {
    position: absolute;
    left: 16px;
    top: 50%;
    transform: translateY(-50%);
    width: 20px;
    height: 20px;
    color: #999;
    pointer-events: none;
  }
  
  #shopify-section-{{ section.id }} .search-input {
    width: 100%;
    padding: 16px 16px 16px 48px;
    border: 1px solid #e0e0e0;
    border-radius: 8px;
    font-size: 14px;
    background: white;
    color: #333;
  }
  
  #shopify-section-{{ section.id }} .search-input::placeholder {
    color: #999;
    text-transform: uppercase;
    font-size: 12px;
    letter-spacing: 0.5px;
  }
  
  #shopify-section-{{ section.id }} .search-input:focus {
    outline: none;
    border-color: #654392;
    box-shadow: 0 0 0 2px rgba(101, 67, 146, 0.1);
  }
  
  #shopify-section-{{ section.id }} .search-loading {
    position: absolute;
    right: 16px;
    top: 50%;
    transform: translateY(-50%);
    width: 20px;
    height: 20px;
    border: 2px solid #e0e0e0;
    border-top: 2px solid #654392;
    border-radius: 50%;
    animation: spin 1s linear infinite;
    display: none;
  }
  
  @keyframes spin {
    0% { transform: translateY(-50%) rotate(0deg); }
    100% { transform: translateY(-50%) rotate(360deg); }
  }
  
  #shopify-section-{{ section.id }} .search-clear {
    position: absolute;
    right: 16px;
    top: 50%;
    transform: translateY(-50%);
    width: 20px;
    height: 20px;
    background: #999;
    border-radius: 50%;
    cursor: pointer;
    display: none;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 12px;
  }
  
  #shopify-section-{{ section.id }} .search-clear:hover {
    background: #654392;
  }
  
  #shopify-section-{{ section.id }} .collection__controls {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 16px;
  }
  
  #shopify-section-{{ section.id }} .facets-summary {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 16px;
  }
  
  #shopify-section-{{ section.id }} .sort-by-facet {
    display: flex;
    align-items: center;
    gap: 8px;
  }
  
  #shopify-section-{{ section.id }} .sort-by-facet .bold {
    display: none;
  }
  
  #shopify-section-{{ section.id }} .sort-by-facet button {
    padding: 12px 16px;
    border: 1px solid #654392;
    border-radius: 8px;
    background: white;
    color: #654392;
    font-size: 12px;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    cursor: pointer;
    transition: all 0.2s ease;
  }
  
  #shopify-section-{{ section.id }} .sort-by-facet button:hover {
    background: #654392;
    color: white;
  }
  
  #shopify-section-{{ section.id }} .popover-listbox__option {
    border: none !important;
    background: white !important;
    color: #654392 !important;
    padding: 12px 16px !important;
    border-radius: 8px !important;
    margin: 2px 0 !important;
  }
  
  #shopify-section-{{ section.id }} .popover-listbox__option:hover {
    background: #654392 !important;
    color: white !important;
  }
  
  #shopify-section-{{ section.id }} .popover-listbox__option[aria-selected="true"] {
    background: #654392 !important;
    color: white !important;
  }
  
  #shopify-section-{{ section.id }} .sort-by-facet .circle-chevron {
    margin-left: 8px;
  }
  
  #shopify-section-{{ section.id }} #desktop-filter-toggle {
    padding: 12px 16px;
    border: none;
    border-radius: 8px;
    background: #EBDCFF;
    color: #654392;
    font-size: 12px;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    cursor: pointer;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    gap: 8px;
    width: fit-content;
  }
  
  #shopify-section-{{ section.id }} #desktop-filter-toggle:hover {
    background: #654392;
    color: white;
  }
  
  #shopify-section-{{ section.id }} #desktop-filter-toggle .icon-subdued {
    color: inherit;
  }
  
  /* Hide floating filter completely */
  #shopify-section-{{ section.id }} .facets__floating-filter {
    display: none !important;
  }
  
  /* Style all filter text */
  .facets__label,
  .facets-summary,
  .facets-summary *,
  .checkbox__label,
  .switch__label,
  .facets__value,
  .facets__value * {
    color: #7E7E7E !important;
    font-weight: 400 !important;
  }

  {%- comment -%} Custom top filters styling {%- endcomment -%}
  #shopify-section-{{ section.id }} .collection-top-filters {
    display: flex;
    flex-direction: column;
    gap: 16px;
    margin-bottom: 24px;
    padding: 16px 0;
    width: 100%;
    max-width: none;
    background: #ffffff;
  }
  
  #shopify-section-{{ section.id }} .collection-breadcrumb {
    display: flex;
    align-items: center;
    gap: 8px;
    font-size: 14px;
    color: #161616;
  }
  
  
  #shopify-section-{{ section.id }} .breadcrumb-separator {
    color: #161616;
  }
  
  #shopify-section-{{ section.id }} .breadcrumb-current {
    color: #161616;
    font-weight: 500;
  }
  
  #shopify-section-{{ section.id }} .collection-title {
    font-size: 32px;
    font-weight: 400;
    color: #654392;
    margin: 0;
    font-family: var(--heading-font-family);
  }

  #shopify-section-{{ section.id }} .collection-top-filters__group {
    display: flex;
    flex-direction: column;
    gap: 12px;
    width: 100%;
  }

  #shopify-section-{{ section.id }} .collection-top-filters__group-title {
    font-size: 16px;
    font-weight: 600;
    color: #000000;
    margin: 0;
  }

  #shopify-section-{{ section.id }} .collection-top-filters__buttons {
    display: flex;
    flex-wrap: nowrap;
    gap: 8px;
    overflow-x: auto;
    scroll-snap-type: x mandatory;
    scrollbar-width: none;
    -ms-overflow-style: none;
    padding-bottom: 4px;
  }

  #shopify-section-{{ section.id }} .collection-top-filters__buttons::-webkit-scrollbar {
    display: none;
  }

  #shopify-section-{{ section.id }} .collection-top-filters__buttons::after {
    content: '';
    flex-shrink: 0;
    width: 60px;
  }

  #shopify-section-{{ section.id }} .collection-top-filters__button {
    padding: 8px 16px;
    /* border: 1px solid #D6D6D6; */
    border-radius: 6px;
    background: #E0CEF8;
    color: #FFFFFF;
    text-decoration: none;
    font-size: 14px;
    font-weight: 500;
    transition: all 0.2s ease-in-out;
    cursor: pointer;
    font-family: inherit;
    outline: none;
    box-shadow: none;
    white-space: nowrap;
    flex-shrink: 0;
    scroll-snap-align: start;
  }

  /* #shopify-section-{{ section.id }} .collection-top-filters__button:hover {
    background: #F8F8F8;
    border-color: #B0B0B0;
  } */

  #shopify-section-{{ section.id }} .collection-top-filters__button.active {
    background: #CCA7FC;
    color: white;
    /* border-color: #6B4C9A; */
  }

  @media screen and (max-width: 699px) {
    #shopify-section-{{ section.id }} .collection-top-filters {
      gap: 8px;
      margin-bottom: 16px;
      /* padding: 12px 16px; */
    }
    
    #shopify-section-{{ section.id }} .collection-top-filters__group {
      gap: 8px;
    }
    
    #shopify-section-{{ section.id }} .collection-top-filters__group-title {
      font-size: 14px;
    }
    
    #shopify-section-{{ section.id }} .collection-top-filters__buttons {
      gap: 6px;
    }
    
    #shopify-section-{{ section.id }} .collection-top-filters__button {
      padding: 8px 12px;
      font-size: 14px;
    }
  }
</style>

{%- comment -%} Custom top filters for specific collections - Dynamic {%- endcomment -%}
{%- if show_top_filters != blank -%}
  {%- comment -%} Debug: Show available filters {%- endcomment -%}
  {%- comment -%}
  <div style="background: #f0f0f0; padding: 10px; margin: 10px 0; font-size: 12px;">
    <strong>Debug - Available Filters:</strong><br>
    {%- for filter in collection.filters -%}
      {{ filter.label }} ({{ filter.values.size }} values)<br>
    {%- endfor -%}
    <strong>Filter Type:</strong> {{ filter_type }}<br>
    <strong>Show Top Filters:</strong> {{ show_top_filters }}
  </div>
  {%- endcomment -%}
  
  <div class="collection-top-filters container">
    {%- comment -%} Breadcrumb {%- endcomment -%}
    <nav class="collection-breadcrumb">
      <span>Collection</span>
      <span class="breadcrumb-separator">/</span>
      <span>{{ collection.title }}</span>
      <span class="breadcrumb-separator">/</span>
      <span class="breadcrumb-current">All</span>
    </nav>
    
    {%- comment -%} Collection Title {%- endcomment -%}
    <h1 class="collection-title">{{ collection.title }}</h1>
    
    {%- case filter_type -%}
      {%- when 'style' -%}
        {%- comment -%} Find the Style filter and display its values {%- endcomment -%}
        {%- for filter in collection.filters -%}
          {%- assign filter_label_downcase = filter.label | downcase -%}
          {%- if filter_label_downcase contains 'style' -%}
            <div class="collection-top-filters__buttons">
              {%- for filter_value in filter.values -%}
                <button type="button" class="collection-top-filters__button {% if filter_value.active %}active{% endif %}" 
                        data-filter-label-value="{{ filter_value.value }}">
                  {{ filter_value.label }}
                </button>
              {%- endfor -%}
            </div>
            {%- break -%}
          {%- endif -%}
        {%- endfor -%}
      {%- when 'size' -%}
        {%- comment -%} Find Band Size and Cup Size filters {%- endcomment -%}
        {%- assign band_size_filter = blank -%}
        {%- assign cup_size_filter = blank -%}
        {%- for filter in collection.filters -%}
          {%- assign filter_label_downcase = filter.label | downcase -%}
          {%- if filter_label_downcase contains 'band' -%}
            {%- assign band_size_filter = filter -%}
          {%- elsif filter_label_downcase contains 'cup' -%}
            {%- assign cup_size_filter = filter -%}
          {%- endif -%}
        {%- endfor -%}
        
        {%- if band_size_filter != blank -%}
          <div class="collection-top-filters__group">
            <h4 class="collection-top-filters__group-title">{{ band_size_filter.label }}</h4>
            <div class="collection-top-filters__buttons">
              {%- for filter_value in band_size_filter.values -%}
                <button type="button" class="collection-top-filters__button {% if filter_value.active %}active{% endif %}" 
                        data-filter-label-value="{{ filter_value.value }}">
                  {{ filter_value.label }} Band
                </button>
              {%- endfor -%}
            </div>
          </div>
        {%- endif -%}
        
        {%- if cup_size_filter != blank -%}
          <div class="collection-top-filters__group">
            <h4 class="collection-top-filters__group-title">{{ cup_size_filter.label }}</h4>
            <div class="collection-top-filters__buttons">
              {%- for filter_value in cup_size_filter.values -%}
                <button type="button" class="collection-top-filters__button {% if filter_value.active %}active{% endif %}" 
                        data-filter-label-value="{{ filter_value.value }}">
                  {{ filter_value.label }} Cup
                </button>
              {%- endfor -%}
            </div>
          </div>
        {%- endif -%}
      {%- when 'feature' -%}
        {%- comment -%} Find the Feature filter and display its values {%- endcomment -%}
        {%- for filter in collection.filters -%}
          {%- assign filter_label_downcase = filter.label | downcase -%}
          {%- if filter_label_downcase contains 'feature' -%}
            <div class="collection-top-filters__buttons">
              {%- for filter_value in filter.values -%}
                <button type="button" class="collection-top-filters__button {% if filter_value.active %}active{% endif %}" 
                        data-filter-label-value="{{ filter_value.value }}">
                  {{ filter_value.label }}
                </button>
              {%- endfor -%}
            </div>
            {%- break -%}
          {%- endif -%}
        {%- endfor -%}
    {%- endcase -%}
  </div>
{%- endif -%}

<div class="container">
  {%- if collection.all_products_count == 0 -%}
    <div class="empty-state">
      <div class="empty-state__icon-wrapper">
        {%- render 'icon' with 'picto-stop', width: 32, height: 32, stroke_width: 1 -%}
        <span class="count-bubble count-bubble--lg">0</span>
      </div>

      <div class="prose">
        <p class="h4">{{ 'collection.general.empty_collection' | t }}</p>

        {%- assign button_content = 'collection.general.continue_shopping' | t -%}
        {%- render 'button', href: routes.all_products_collection_url, size: 'xl', content: button_content -%}
      </div>
    </div>
  {%- else -%}
    {%- paginate collection.products by section.settings.products_per_page -%}
      <div class="collection {% if show_filters %}collection--filters-{{ section.settings.filter_layout | escape }}{% endif %}">
        {%- if show_filters or section.settings.show_sort_by -%}
          {%- comment -%}
          IMPLEMENTATION NOTE: we have to output the drawer no matter what, as it is used on mobile (all the time) or desktop (when in drawer mode)
          {%- endcomment -%}

          <facet-drawer header-bordered id="facets-drawer" class="facets-drawer drawer" open-from="left">
            <p class="h5" slot="header">{{ 'collection.faceting.filters' | t }}</p>
            {%- render 'facets-vertical', results: collection, show_filters: show_filters, show_sort_by: section.settings.show_sort_by, update_on_change: false -%}
          </facet-drawer>

          {%- if section.settings.filter_layout == 'horizontal' -%}
            {%- render 'collection-top-bar', results: collection, show_filters: show_filters, show_active_filters: show_filters, show_sort_by: section.settings.show_sort_by -%}
          {%- else -%}
            {%- render 'collection-top-bar', results: collection, show_filters: false, show_active_filters: show_filters, show_sort_by: section.settings.show_sort_by -%}
          {%- endif -%}

          {%- comment -%}We also need to render the button, that is floating on mobile{%- endcomment -%}
          {%- if show_filters or section.settings.show_sort_by -%}
            {%- capture content_key -%}
              {%- if show_filters and section.settings.show_sort_by -%}
                collection.faceting.filter_and_sort
              {%- elsif show_filters and section.settings.show_sort_by == false -%}
                collection.faceting.filter_button
              {%- elsif show_filters == false and section.settings.show_sort_by -%}
                collection.faceting.sort_by
              {%- endif -%}
            {%- endcapture -%}

            <facet-floating-filter class="facets__floating-filter md:hidden">
              {%- assign filter_label = content_key | t -%}
              {%- render 'button', size: 'xl', content: filter_label, icon: 'filter', style: 'fill', background: settings.text_color, text_color: settings.background, aria_controls: 'facets-drawer' -%}
            </facet-floating-filter>
          {%- endif -%}
        {%- endif -%}

        {%- if show_filters and section.settings.filter_layout == 'sidebar' -%}
          <div class="collection__facets">
            <safe-sticky class="collection__facets-scroller">
              {%- render 'facets-vertical', results: collection, show_filters: true, show_sort_by: false, update_on_change: true -%}
            </safe-sticky>
          </div>
        {%- endif -%}

        <div class="collection__results">
          {%- if collection.products_count == 0 -%}
            <div class="empty-state">
              <div class="empty-state__icon-wrapper">
                {%- render 'icon' with 'picto-stop', width: 32, height: 32, stroke_width: 1 -%}
                <span class="count-bubble count-bubble--lg">0</span>
              </div>

              <div class="prose">
                <p class="h5">{{ 'collection.faceting.no_results' | t }}</p>

                {%- assign button_content = 'collection.faceting.clear_filters' | t -%}
                {%- render 'button', href: collection.url, is: 'facet-link', size: 'xl', content: button_content -%}
              </div>
            </div>
          {%- else -%}
            <div class="v-stack gap-6">
              <div class="v-stack gap-4 md:hidden">
                {%- comment -%}We have to duplicate some information on mobile and tablet here{%- endcomment -%}
                <p class="text-center">{{ 'collection.products_count' | t: count: collection.products_count }}</p>
                {% comment %} {%- render 'active-facets', results: collection -%} {% endcomment %}
              </div>

              <reveal-items selector=".product-list > *">
                <product-list class="product-list" role="region" aria-live="polite">
                  {%- for product in collection.products -%}
                    {%- for block in section.blocks -%}
                      {%- if forloop.parentloop.index != block.settings.position -%}
                        {%- continue -%}
                      {%- endif -%}

                      <div id="block-{{ section.id }}-{{ block.id }}" {% render 'surface', class: 'product-list__promo group', text_color: block.settings.text_color %} {{ block.shopify_attributes }}>
                        <a {% if block.settings.link_url %}href="{{ block.settings.link_url }}"{% endif %} class="content-over-media h-full rounded-sm" style="--content-over-media-overlay: {{ block.settings.overlay_color.rgb }} / {{ block.settings.overlay_opacity | divided_by: 100.0 }}">
                          {%- case block.type -%}
                            {%- when 'promotion_image' -%}
                              {%- liquid
                                assign loading_strategy = nil
                      
                                if section.index > 3 or forloop.index > 3
                                  assign loading_strategy = 'lazy'
                                endif
                              -%}

                              {%- if block.settings.image != blank -%}
                                <picture>
                                  {%- capture sizes -%}(max-width: 699px) 100vw, {{ 400 | times: block.settings.column_span }}px{%- endcapture -%}

                                  <source
                                    media="(max-width: 699px)"
                                    srcset="{{ block.settings.mobile_image | image_url: width: 400 }} 400w, {{ block.settings.mobile_image | image_url: width: 600 }} 600w, {{ block.settings.mobile_image | image_url: width: 800 }} 800w, {{ block.settings.mobile_image | image_url: width: 1000 }} 1000w, {{ block.settings.mobile_image | image_url: width: 1200 }} 1200w"
                                    width="{{ block.settings.mobile_image.width }}"
                                    height="{{ block.settings.mobile_image.height }}"
                                  >

                                  {{- block.settings.image | image_url: width: block.settings.image.width | image_tag: loading: loading_strategy, sizes: sizes, widths: '200,300,400,500,600,700,800,900,1000,1200,1400,1600', class: 'zoom-image' -}}
                                </picture>
                              {%- endif -%}

                            {%- when 'promotion_video' -%}
                              {%- if block.settings.video -%}
                                <video-media autoplay>
                                  {{- block.settings.video | video_tag: playsinline: true, muted: true, loop: true, preload: 'metadata' -}}
                                </video-media>
                              {%- else -%}
                                <video-media host="{{ block.settings.external_video_url.type }}" autoplay>
                                  <template>
                                    {%- if block.settings.external_video_url.type == 'youtube' -%}
                                      <iframe src="https://www.youtube.com/embed/{{ block.settings.external_video_url.id }}?playsinline=1&autoplay=1&controls=0&mute=1&loop=1&playlist={{ block.settings.external_video_url.id }}&enablejsapi=1&rel=0&modestbranding=1&origin={{ 'https://' | append: request.host | url_encode }}" allow="autoplay; encrypted-media" allowfullscreen="allowfullscreen"></iframe>
                                    {%- elsif block.settings.external_video_url.type == 'vimeo' -%}
                                      <iframe src="https://player.vimeo.com/video/{{ block.settings.external_video_url.id }}?autoplay=1&autopause=1&background=1&loop=1&muted=1&transparent=0&responsive=1&portrait=0&title=0&byline=0&color={{ settings.text_color | remove_first: '#' }}" allow="autoplay; encrypted-media;" allowfullscreen="allowfullscreen"></iframe>
                                    {%- endif -%}
                                  </template>
                                </video-media>
                              {%- endif -%}
                          {%- endcase -%}

                          {%- if block.settings.title != blank or block.settings.link_text != blank -%}
                            <div class="{{ block.settings.text_position }}">
                              <div class="v-stack gap-4 sm:gap-6 {% if block.settings.text_position contains 'text-center' %}justify-items-center{% elsif block.settings.text_position contains 'text-end' %}justify-items-end{% endif %}">
                                {%- if block.settings.title != blank or block.settings.content != blank -%}
                                  <div class="prose">
                                    {%- if block.settings.title != blank -%}
                                      <p class="{{ block.settings.heading_tag }}">{{ block.settings.title | escape }}</p>
                                    {%- endif -%}

                                    {{- block.settings.content -}}
                                  </div>
                                {%- endif -%}

                                {%- if block.settings.link_text != blank -%}
                                  <div class="h-stack gap-4">
                                    <span class="bold">{{- block.settings.link_text | escape -}}</span>

                                    <div class="circle-button circle-button--sm ring-current">
                                      <span class="sr-only">{{ 'general.accessibility.previous' | t }}</span>
                                      <span class="animated-arrow"></span>
                                    </div>
                                  </div>
                                {%- endif -%}
                              </div>
                            </div>
                          {%- endif -%}
                        </a>
                      </div>
                    {%- endfor -%}

                    {%- render 'product-card', product: product, stacked: true, position: forloop.index, show_badges: true -%}
                  {%- endfor -%}
                </product-list>
              </reveal-items>
            </div>
          {%- endif -%}
        </div>

        {%- render 'pagination', paginate: paginate, facet: true, class: 'collection__pagination' -%}
      </div>
{%- endpaginate -%}
{%- endif -%}

<script>
function initializeFilterToggle() {
  const section = document.getElementById('shopify-section-{{ section.id }}');
  if (!section) return;
  
  const filterButton = section.querySelector('#desktop-filter-toggle');
  
  if (filterButton) {
    filterButton.onclick = function() {
      // On mobile, trigger the floating filter button (drawer)
      if (window.innerWidth < 700) {
        const floatingButton = document.querySelector('.facets__floating-filter button');
        if (floatingButton) {
          floatingButton.click();
        }
      } else {
        // On desktop, toggle the sidebar
        const section = document.getElementById('shopify-section-{{ section.id }}');
        if (section) {
          section.classList.toggle('sidebar-active');
        }
      }
    };
  }
}

function initializeSearch() {
  const section = document.getElementById('shopify-section-{{ section.id }}');
  if (!section) return;
  
  const searchForm = section.querySelector('.search-form');
  const searchInput = section.querySelector('.search-input');
  const searchClear = section.querySelector('.search-clear');
  const searchLoading = section.querySelector('.search-loading');
  
  if (searchForm && searchInput) {
    // Remove any existing listeners to prevent duplicates
    searchForm.removeEventListener('submit', handleSearchSubmit);
    searchInput.removeEventListener('input', handleSearchInput);
    if (searchClear) {
      searchClear.removeEventListener('click', handleSearchClear);
    }
    
    // Add form submit handler
    searchForm.addEventListener('submit', handleSearchSubmit);
    
    // Add input handler for live search
    searchInput.addEventListener('input', handleSearchInput);
    
    // Add clear button handler
    if (searchClear) {
      searchClear.addEventListener('click', handleSearchClear);
    }
    
    // Update UI based on current search state
    updateSearchUI(searchInput, searchClear, searchLoading);
  }
}

function handleSearchClear() {
  const section = document.getElementById('shopify-section-{{ section.id }}');
  const searchInput = section?.querySelector('.search-input');
  
  if (searchInput) {
    searchInput.value = '';
    searchInput.focus();
    performSearch(''); // Clear search results
  }
}

function updateSearchUI(searchInput, searchClear, searchLoading) {
  const hasValue = searchInput.value.trim().length > 0;
  
  if (searchClear) {
    searchClear.style.display = hasValue ? 'flex' : 'none';
  }
  
  if (searchLoading) {
    searchLoading.style.display = 'none';
  }
}

let searchTimeout;

function handleSearchSubmit(e) {
  e.preventDefault();
  const form = e.target;
  const searchTerm = form.querySelector('.search-input').value.trim();
  
  if (searchTerm) {
    performSearch(searchTerm);
  }
}

function handleSearchInput(e) {
  const searchTerm = e.target.value.trim();
  const section = document.getElementById('shopify-section-{{ section.id }}');
  const searchClear = section?.querySelector('.search-clear');
  const searchLoading = section?.querySelector('.search-loading');
  
  // Update UI immediately
  updateSearchUI(e.target, searchClear, searchLoading);
  
  // Clear existing timeout
  clearTimeout(searchTimeout);
  
  // Debounce search to avoid too many requests
  searchTimeout = setTimeout(() => {
    if (searchTerm.length >= 2 || searchTerm.length === 0) {
      performSearch(searchTerm);
    }
  }, 300);
}

function performSearch(searchTerm) {
  const section = document.getElementById('shopify-section-{{ section.id }}');
  const productList = section?.querySelector('.product-list');
  const emptyState = section?.querySelector('.empty-state');
  const searchLoading = section?.querySelector('.search-loading');
  
  if (!productList) return;
  
  // Show loading state
  productList.style.opacity = '0.5';
  if (searchLoading) {
    searchLoading.style.display = 'block';
  }
  
  // Build search URL with current collection and search term
  const currentUrl = new URL(window.location);
  const searchUrl = new URL('/search', window.location.origin);
  
  // Preserve current collection context
  if (currentUrl.pathname.includes('/collections/')) {
    searchUrl.searchParams.set('type', 'product');
    searchUrl.searchParams.set('options[unavailable_products]', 'last');
    searchUrl.searchParams.set('options[prefix]', 'last');
  }
  
  // Add search term
  if (searchTerm) {
    searchUrl.searchParams.set('q', searchTerm);
  }
  
  // Fetch search results
  fetch(searchUrl.toString())
    .then(response => response.text())
    .then(html => {
      // Parse the response HTML
      const parser = new DOMParser();
      const doc = parser.parseFromString(html, 'text/html');
      
      // Extract product list from search results
      const searchProductList = doc.querySelector('.product-list');
      const searchEmptyState = doc.querySelector('.empty-state');
      
      if (searchProductList) {
        // Replace current product list with search results
        productList.innerHTML = searchProductList.innerHTML;
        
        // Update product count if available
        const productCount = doc.querySelector('.collection__results .text-center');
        if (productCount) {
          const currentCount = section.querySelector('.collection__results .text-center');
          if (currentCount) {
            currentCount.textContent = productCount.textContent;
          }
        }
        
        // Hide empty state if it exists
        if (emptyState) {
          emptyState.style.display = 'none';
        }
      } else if (searchEmptyState) {
        // Show empty state for no results
        productList.innerHTML = '';
        if (emptyState) {
          emptyState.style.display = 'block';
          emptyState.innerHTML = searchEmptyState.innerHTML;
        }
      }
      
      // Hide loading state
      productList.style.opacity = '1';
      if (searchLoading) {
        searchLoading.style.display = 'none';
      }
      
      // Trigger any necessary re-initializations
      initializeFilterToggle();
      
      // Dispatch custom event for other components
      document.dispatchEvent(new CustomEvent('search:completed', {
        detail: { searchTerm: searchTerm }
      }));
    })
    .catch(error => {
      console.error('Search error:', error);
      productList.style.opacity = '1';
      if (searchLoading) {
        searchLoading.style.display = 'none';
      }
    });
}

function handleFilterToggle() {
  const section = document.getElementById('shopify-section-{{ section.id }}');
  if (section) {
    section.classList.toggle('sidebar-active');
  }
}

// Initialize on page load
document.addEventListener('DOMContentLoaded', function() {
  initializeFilterToggle();
  initializeSearch();
});

// Re-initialize after AJAX updates
document.addEventListener('shopify:section:load', function(event) {
  if (event.detail.sectionId === '{{ section.id }}') {
    initializeFilterToggle();
    initializeSearch();
  }
});

// Re-initialize after section reorder
document.addEventListener('shopify:section:reorder', function(event) {
  if (event.detail.sectionId === '{{ section.id }}') {
    initializeFilterToggle();
    initializeSearch();
  }
});

// Re-initialize after facet changes (when filters are applied)
document.addEventListener('facet:changed', function() {
  initializeFilterToggle();
  initializeSearch();
});

// Fallback: re-initialize periodically for aggressive AJAX updates
setInterval(function() {
  const section = document.getElementById('shopify-section-{{ section.id }}');
  const filterButton = section?.querySelector('#desktop-filter-toggle');
  const searchForm = section?.querySelector('.search-form');
  
  if (filterButton && !filterButton.hasAttribute('data-listener-attached')) {
    filterButton.setAttribute('data-listener-attached', 'true');
    initializeFilterToggle();
  }
  
  if (searchForm && !searchForm.hasAttribute('data-listener-attached')) {
    searchForm.setAttribute('data-listener-attached', 'true');
    initializeSearch();
  }
}, 1000);
</script>
</div>

{% schema %}
{
  "name": "Collection page",
  "class": "shopify-section--main-collection",
  "tag": "section",
  "max_blocks": 5,
  "blocks": [
    {
      "type": "promotion_image",
      "name": "Promotion image",
      "settings": [
        {
          "type": "paragraph",
          "content": "Blocks may be hidden if not enough products are visible."
        },
        {
          "type": "range",
          "id": "position",
          "min": 1,
          "max": 50,
          "label": "Position in grid",
          "default": 4
        },
        {
          "type": "select",
          "id": "column_span",
          "label": "Desktop item size",
          "info": "Size is adjusted automatically on smaller screen to improve user experience.",
          "options": [
            {
              "value": "1",
              "label": "1 column"
            },
            {
              "value": "2",
              "label": "2 columns"
            }
          ],
          "default": "1"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image",
          "info": "1600 x 1000px .jpg recommended"
        },
        {
          "type": "image_picker",
          "id": "mobile_image",
          "label": "Mobile image",
          "info": "1000 x 1000px .jpg recommended. Default to desktop image."
        },
        {
          "type": "text",
          "id": "title",
          "label": "Heading",
          "default": "Promote a product or a temporary offer"
        },
        {
          "type": "richtext",
          "id": "content",
          "label": "Content"
        },
        {
          "type": "url",
          "id": "link_url",
          "label": "Link URL"
        },
        {
          "type": "text",
          "id": "link_text",
          "label": "Link text",
          "default": "View all"
        },
        {
          "type": "select",
          "id": "heading_tag",
          "label": "Heading style",
          "options": [
            {
              "value": "h1",
              "label": "X-Large"
            },
            {
              "value": "h2",
              "label": "Large"
            },
            {
              "value": "h3",
              "label": "Medium"
            },
            {
              "value": "h4",
              "label": "Small"
            },
            {
              "value": "h5",
              "label": "X-Small"
            },
            {
              "value": "h6",
              "label": "XX-Small"
            }
          ],
          "default": "h4"
        },
        {
          "type": "select",
          "id": "text_position",
          "label": "Content position",
          "options": [
            {
              "value": "place-self-start text-start",
              "label": "Top left"
            },
            {
              "value": "place-self-start-center text-center",
              "label": "Top center"
            },
            {
              "value": "place-self-start-end text-end",
              "label": "Top right"
            },
            {
              "value": "place-self-center-start text-start",
              "label": "Middle left"
            },
            {
              "value": "place-self-center text-center",
              "label": "Middle center"
            },
            {
              "value": "place-self-center-end text-end",
              "label": "Middle right"
            },
            {
              "value": "place-self-end-start text-start",
              "label": "Bottom left"
            },
            {
              "value": "place-self-end-center text-center",
              "label": "Bottom center"
            },
            {
              "value": "place-self-end text-end",
              "label": "Bottom right"
            }
          ],
          "default": "place-self-end-start text-start"
        },
        {
          "type": "header",
          "content": "Colors"
        },
        {
          "type": "color",
          "id": "text_color",
          "label": "Text",
          "default": "#ffffff"
        },
        {
          "type": "color",
          "id": "overlay_color",
          "label": "Overlay",
          "default": "#000000"
        },
        {
          "type": "range",
          "id": "overlay_opacity",
          "label": "Overlay opacity",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "%",
          "default": 30
        }
      ]
    },
    {
      "type": "promotion_video",
      "name": "Promotion video",
      "settings": [
        {
          "type": "paragraph",
          "content": "Blocks may be hidden if not enough products are visible. Video are muted to allow autoplay. For best visual results and avoid platform branding, we recommend uploading a MP4 file."
        },
        {
          "type": "range",
          "id": "position",
          "min": 1,
          "max": 50,
          "label": "Position in grid",
          "default": 4
        },
        {
          "type": "select",
          "id": "column_span",
          "label": "Desktop item size",
          "info": "Size is adjusted automatically on smaller screen to improve user experience.",
          "options": [
            {
              "value": "1",
              "label": "1 column"
            },
            {
              "value": "2",
              "label": "2 columns"
            }
          ],
          "default": "1"
        },
        {
          "type": "video",
          "id": "video",
          "label": "Video",
          "info": "Replaces external video if both are set."
        },
        {
          "type": "video_url",
          "id": "external_video_url",
          "accept": ["vimeo", "youtube"],
          "label": "External video URL",
          "default": "https://www.youtube.com/watch?v=_9VUPq3SxOc"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Heading",
          "default": "Promote a product or a temporary offer"
        },
        {
          "type": "richtext",
          "id": "content",
          "label": "Content"
        },
        {
          "type": "url",
          "id": "link_url",
          "label": "Link URL"
        },
        {
          "type": "text",
          "id": "link_text",
          "label": "Link text",
          "default": "View all"
        },
        {
          "type": "select",
          "id": "heading_tag",
          "label": "Heading style",
          "options": [
            {
              "value": "h1",
              "label": "X-Large"
            },
            {
              "value": "h2",
              "label": "Large"
            },
            {
              "value": "h3",
              "label": "Medium"
            },
            {
              "value": "h4",
              "label": "Small"
            },
            {
              "value": "h5",
              "label": "X-Small"
            },
            {
              "value": "h6",
              "label": "XX-Small"
            }
          ],
          "default": "h4"
        },
        {
          "type": "select",
          "id": "text_position",
          "label": "Content position",
          "options": [
            {
              "value": "place-self-start text-start",
              "label": "Top left"
            },
            {
              "value": "place-self-start-center text-center",
              "label": "Top center"
            },
            {
              "value": "place-self-start-end text-end",
              "label": "Top right"
            },
            {
              "value": "place-self-center-start text-start",
              "label": "Middle left"
            },
            {
              "value": "place-self-center text-center",
              "label": "Middle center"
            },
            {
              "value": "place-self-center-end text-end",
              "label": "Middle right"
            },
            {
              "value": "place-self-end-start text-start",
              "label": "Bottom left"
            },
            {
              "value": "place-self-end-center text-center",
              "label": "Bottom center"
            },
            {
              "value": "place-self-end text-end",
              "label": "Bottom right"
            }
          ],
          "default": "place-self-end-start text-start"
        },
        {
          "type": "header",
          "content": "Colors"
        },
        {
          "type": "color",
          "id": "text_color",
          "label": "Text",
          "default": "#ffffff"
        },
        {
          "type": "color",
          "id": "overlay_color",
          "label": "Overlay",
          "default": "#000000"
        },
        {
          "type": "range",
          "id": "overlay_opacity",
          "label": "Overlay opacity",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "%",
          "default": 30
        }
      ]
    }
  ],
  "settings": [
    {
      "type": "range",
      "id": "products_per_page",
      "label": "Products per page",
      "min": 8,
      "max": 50,
      "step": 1,
      "default": 24
    },
    {
      "type": "select",
      "id": "products_per_row_mobile",
      "label": "Products per row (mobile)",
      "options": [
        {
          "value": "1",
          "label": "1"
        },
        {
          "value": "2",
          "label": "2"
        }
      ],
      "default": "2"
    },
    {
      "type": "range",
      "min": 2,
      "max": 5,
      "id": "products_per_row_desktop",
      "label": "Products per row (desktop)",
      "info": "For best results, limit to 4 when using sidebar filtering. On small screen size, products per row is limited to 2 (with sidebar) or 3 (without sidebar) to maximize readability",
      "default": 3
    },
    {
      "type": "header",
      "content": "Filters & sort"
    },
    {
      "type": "select",
      "id": "filter_layout",
      "label": "Desktop layout",
      "options": [
        {
          "value": "sidebar",
          "label": "Sidebar"
        },
        {
          "value": "horizontal",
          "label": "Horizontal"
        },
        {
          "value": "drawer",
          "label": "Drawer"
        }
      ],
      "default": "sidebar"
    },
    {
      "type": "checkbox",
      "id": "show_sort_by",
      "label": "Show sort by",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_filters",
      "label": "Show filters",
      "info": "[Customize filters](https://help.shopify.com/manual/online-store/search-and-discovery/filters)",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_filter_group_name",
      "label": "Show group name",
      "info": "Group name will be shown inside selected filters.",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_filter_values_count",
      "label": "Show filter values count",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "open_first_filter_group",
      "label": "Open first group by default",
      "default": false
    }
  ]
}
{% endschema %}

<script>
document.addEventListener('DOMContentLoaded', function() {
  console.log('Collection top filters script loaded');
  
  // Use event delegation to handle dynamically updated buttons
  document.addEventListener('click', function(e) {
    if (e.target.classList.contains('collection-top-filters__button')) {
      e.preventDefault();
      e.stopPropagation();
      
      const filterValue = e.target.getAttribute('data-filter-label-value');
      console.log('Top filter clicked:', filterValue);
      
      // Just click the filter - let Shopify handle the rest
      document.querySelectorAll(`[data-filter-label-value="${filterValue}"]`).forEach(element => {
        if (element !== e.target) { // Don't click ourselves
          element.click();
        }
      });
    }
  });
});
</script>
